node ('preint') {
  properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')),
    [$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false],
    parameters([
      string(defaultValue: 'headless_chrome', description: 'Name of the capybara driver, options include: webkit, headless_chrome', name: 'CAPYBARA_DRIVER'),
      string(defaultValue: 'smoke', description: 'The set of tests, each set can be found in feature_set.yml', name: 'FEATURE_SET'),
      string(defaultValue: 'https://web.preint.cwds.io', description: 'Target URL to run the tests', name: 'APP_URL'),
      string(defaultValue: '/intake', name: 'APP_URL_PREFIX'),
      string(defaultValue: 'latest', description: 'Target URL to run the tests', name: 'INTAKE_APP_VERSION')]),pipelineTriggers([])
    ])

  def errorcode = null;
  def buildInfo = '';

  try {
    stage('Checkout latest version') {
      cleanWs()
      git branch: 'master', credentialsId: '433ac100-b3c2-4519-b4d6-207c029a103b', url: 'git@github.com:ca-cwds/acceptance_testing.git'
    }

    stage('Build Docker'){
      sh 'docker-compose build'
    }

    stage('Run tests'){
      withEnv(["APP_URL=${APP_URL}",
               "FEATURE_SET=${FEATURE_SET}",
               "CAPYBARA_DRIVER=${CAPYBARA_DRIVER}"]) {
        sh 'docker-compose run acceptance_test'
      }
    }

    stage ('Integration Env Deploy') {
               build job: '/Integration Environment/intake-app-pipeline/',
                   parameters: [
                   string(name: 'APP_VERSION', value: INTAKE_APP_VERSION),
                   string(name: 'INVENTORY', value: 'inventories/integration/hosts.yml'),
                   string(name: 'PLAYBOOK_NAME', value: 'deploy-intake.yml'),
                   string(name: 'ENABLE_NEWRELIC', value: 'true'),
                   string(name: 'APP_NAME', value: 'intake')
                   ],
                   wait: false
    }
  } catch (Exception e) {
    errorcode = e
    slackSend color: 'danger', channel: '#tech_intake', message: "Intake smoke acceptance tests failed: ${env.JOB_NAME} ${env.BUILD_NUMBER}"
  }

  finally {
    stage('Reports') {
      fingerprint 'reports/*'
      junit allowEmptyResults: true, testResults: 'reports/TEST-*.xml'
    }
    stage('Clean') {
        sh 'docker-compose down --rmi all -v --remove-orphans -t 120'
    }
  }
}
